html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  border: 0;
  overflow: hidden;
}

.textarea {
  resize: vertical; /* Allow vertical resizing if needed */
  overflow-y: auto; /* Add vertical scrollbar if content overflows */
}

body {
  width: 100%;
  height: 100%;
}

.window {
    width: 400px;
    height: 450px;
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
}
.chatmessages{
  width:350px;
  height: 200px;
  position: absolute;
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
}

/* Adjust the width for screens smaller than 600px */
@media (max-width: 600px) {
    .window {
      width: 350px; /* or whatever width you prefer for smaller screens */
    }
    .chatmessages{
      width:325px
    }
}

.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  z-index: 1;
}

.modal-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

body {
  overflow: hidden;
  width: 100%;
  height: 100%;
  padding: 0%;
  margin: 0; /* Ensure there's no default margin */ /* Use flexbox to structure the content */
}

.taskbar {
  position: absolute;
  z-index: 55555;
  bottom: 0;
  left: 0;
  right: 0;
  height: 27px; /* not including outline part of border */
  display: flex;
  flex: 1;
}
/* .taskbar-button is generally .task or .start-button for now */
.taskbar button,
.taskbar-divider,
.tray {
  margin: 2px;
}
.taskbar-divider {
  margin-right: 0px;
  margin-left: 0px;
  /* TODO: maybe make that 2px rule padding on the taskbar instead and avoid resetting this */
}
.taskbar button {
  line-height: 14px;
  padding: 2px;
  overflow: hidden; /* TODO: If tons and tons of tasks don't show icons? (smaller than width of an icon?) */
  display: flex;
  flex-direction: row;
  align-items: center;
  /* (justify-content: flex-start;) */
}
.taskbar button .title {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.taskbar .start-button {
  flex-shrink: 0;
  padding: 2px 4px;
}
.tray {
  display: flex;
  flex-direction: row;
  /* align-items: center; */
  /* align-content: center; */
  /* justify-content: center; */
  line-height: 22px;
  box-sizing: border-box;
  vertical-align: middle;
}
.tray-icons {
  display: flex;
  align-items: center;
  margin-left: 2px; /* XXX basically 1px, but 2px because of the way the border is done */
}
.tray-icon {
  margin-left: 1px;
}
.taskbar-time {
  width: 60px;
  text-align: center;
}
/* TODO: offset task button contents down a px when depressed... actually most buttons */
.tasks {
  display: flex;
  flex: 1;
  height: 100%;
  min-width: 0; /* reset implicit min-width from flexbox */
}
.task {
  max-width: 200px;
  width: 50%;
  text-align: left;
}
.task img {
  padding-right: 4px;
  flex: 0 0 auto;
}
.taskbar {
  outline: 1px solid var(--ButtonLight);
  border-top: 1px solid var(--ButtonHilight);
  background: var(--ButtonFace);
  color: var(--ButtonText);
}
.inset-shallow {
  border-style: solid;
  border-width: 1px;
  border-color: rgb(128, 128, 128) rgb(255, 255, 255) rgb(255, 255, 255)
    rgb(128, 128, 128);
  border-color: rgb(128, 128, 128) rgb(255, 255, 255) rgb(255, 255, 255)
    rgb(128, 128, 128);
  background-color: rgb(192, 192, 192);
  background-color: var(--ButtonFace);
  color: rgb(0, 0, 0);
  color: var(--ButtonText);
}
h5 {
  font-size: .75rem;
}
.folder-view {
	position: relative;
	flex: 1;
	overflow: auto;
}
.desktop-icon {
	display: inline-block;
	vertical-align: bottom; /* with inline-block, always */
	text-align: center;
}
.desktop-icon .icon-wrapper {
	display: inline-block;
	vertical-align: bottom; /* with inline-block, always */
	position: relative;
}
.desktop-icon .icon-wrapper,
.desktop-icon .icon-wrapper .selection-effect {
	width: var(--icon-size, 32px);
	height: var(--icon-size, 32px);
}
.desktop-icon .title {
	line-height: 13px;
	font-size: 9px;
	overflow: hidden;
	text-overflow: ellipsis; /* TODO: make this work with multiline text! This is apparently a limitation of this CSS property and there are various crazy CSS hacks and JS libs to solve this. */
	word-wrap: break-word; /* All browsers since IE 5.5+ */
	overflow-wrap: break-word; /* Renamed property in CSS3 draft spec */
}
.desktop-icon:not(.focused) .title {
	/* max-height: 2em would only work with line-height: 1 */
	max-height: calc(13px * 2);
}
.desktop-icon.focused {
	z-index: 1; /* for multi-line title display */
}
.title {
	font-family: sans-serif;
	font-family: "MS Sans Serif", "Segoe UI", sans-serif;
	/*font-size: 10px;*/
	font-size: 8pt;
	background: rgba(255, 255,255, 0);
	color: white;
	position: relative;
	box-sizing: border-box;
	display: flex;
    justify-content: center;
}

.blue-background {
    background-color: rgb(0,0,128);
    border: 1px dotted rgba(255,255,255,0.5);
    color: white; /* Change the text color to white for better visibility against the blue background */
}

.blue-background1 .icon-wrapper1::before {
    content: "";  /* Necessary for the pseudo-element to be generated */
    position: absolute;  /* Absolute positioning */
    top: 50%;  /* Center the pseudo-element vertically */
    left: 50%;  /* Center the pseudo-element horizontally */
    width: 40px;  /* Match the width of the PNG */
    height: 40px;  /* Match the height of the PNG */
    transform: translate(-50%, -50%);  /* Offset the pseudo-element to ensure it's centered */
    background-color: rgba(0, 0, 255, 0.3);  /* Semi-transparent blue */
    pointer-events: none;  /* Ensure the pseudo-element doesn't interfere with click events */
}

.icon-wrapper1 {
    position: relative;  /* Ensure the div has relative positioning */
}

.task.toggled {
  border-style: solid;
  border-width: 1px;
  border-color: rgb(128, 128, 128) rgb(255, 255, 255) rgb(255, 255, 255)
    rgb(128, 128, 128);
  border-color: rgb(128, 128, 128) rgb(255, 255, 255) rgb(255, 255, 255)
    rgb(128, 128, 128);
  background-color: rgb(192, 192, 192);
  background-image: url(./assets/bg.png);
  background-repeat: repeat;
}

#pfgLabsDiv::before {
    content: "";
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: [height_of_arrow_image]; /* Set this to the height of your arrow image */
    background-image: url(./assets/arrow.png);
    background-repeat: no-repeat;
    background-position: center top;
    z-index: 5; /* Ensure the arrow is above other elements */
}